body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #E3EAFF;
}

header {
    /* background-color: #0030C3; */
    padding: 20px;
    text-align: center;
    font-size: 24px;
    color: white;
}

table {
    border-collapse: collapse;
    width: 100%;
}

th,
td {
    border: 1px solid #dddddd;
    text-align: left;
    padding: 8px;
}

th {
    background-color: #f2f2f2;
}

.container-prize {
    /* margin-top: 1rem; */
    display: flex;
    justify-content: center;
    margin-bottom: 1rem;
}

.button-prize {
    padding: 0.5rem;
    background-color: #0030C3;
    color: #fff;
    border-radius: 15px;
    width: 200px;
    height: 50px;
    font-size: 16px;
    cursor: pointer;
}

.header-container {
    display: flex;
    justify-content: space-between;
    /* Distribute space evenly between child elements */
    align-items: center;
    /* Center vertically */
    color: white;
    /* Change the text color as needed */
}

.left-header {
    display: flex;
    align-items: center;
    /* Center vertically */
}

.center-header {
    flex: 1;
    /* Occupy remaining space */
    text-align: center;
    /* Center text horizontally */
}

.left-header,
.right-header {
    width: 25%;
}

.right-header {
    display: flex;
    justify-content: flex-end;
    margin-right: 1rem;
}

.text-header {
    color: #0030c3;
    font-size: 2rem;
    font-weight: 900;
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

.fadeIn {
    animation-name: fadeIn;
    animation-duration: 0.5s;
}

@keyframes slideInRight {
    from {
        transform: translateX(100%);
    }

    to {
        transform: translateX(0);
    }
}

@keyframes slideInLeft {
    from {
        transform: translateX(-100%);
    }

    to {
        transform: translateX(0);
    }
}

.slideInRight {
    animation-name: slideInRight;
    animation-duration: 1s;
}

.slideInLeft {
    animation-name: slideInLeft;
    animation-duration: 1s;
}

.name-prize {
    margin-top: 1rem;
    text-align: center;
    font-size: 24px;
    font-weight: 800;
    font-family: Arial, Helvetica, sans-serif;
}

.prize-description {
    margin-top: 1rem;
    margin-bottom: 1rem;
    text-align: center;
    font-size: 16px;
    font-weight: 500;
    font-family: Arial, Helvetica, sans-serif;
}

/* Spinner */
#spinner-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(255, 255, 255, 0.8);
    /* semi-transparent white background */
    display: none;
    /* Initially hidden */
    justify-content: center;
    align-items: center;
    z-index: 9999;
    /* Ensure it's above other content */
}

.spinner {
    border: 4px solid #f3f3f3;
    /* Light grey */
    border-top: 4px solid #3498db;
    /* Blue */
    border-radius: 50%;
    width: 50px;
    height: 50px;
    animation: spin 1s linear infinite;
    /* Rotate animation */
}

@keyframes spin {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }
}

.numbers-prize {
    display: flex;
    justify-content: center;
    margin-bottom: 1rem;
}

.number {
    padding: 2.5rem;
    /* border: 1px solid black; */
    margin: 5px;
    font-size: 40px;
    border-radius: 15px;
    background-color: #0030c3;
    color: #fff;
    transition: transform 0.5s ease-in-out;
    /* Animation transition */
    font-weight: 800;
}

@property --num {
    syntax: "<integer>";
    initial-value: 0;
    inherits: false;
  }
  
  span.number-value {
    transition: --num 0.2s;
    counter-set: num var(--num);
    font: 800 40px system-ui;
    animation: changeNum 0.2s linear infinite;
  }
  span.number-value::after {
    content: counter(num);
  }
  /* span.number-value {
    --num: 10;
  } */

  @keyframes changeNum {
    0% { --num: 0; }
    100% { --num: 9; }
  }
  
  /* .number-value {
    animation: changeNum 2s linear infinite;
  }
  
  span.number-value {
    transition: --num 2s;
    counter-set: num var(--num);
    font: 800 40px system-ui;
  }
  
  span.number-value::after {
    content: counter(num);
  } */
